{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // const Post = props => (\n//   <li>\n//     <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" title=\"Hello Next.js\" />\n//         <PostLink id=\"learn-nextjs\" title=\"Learn Next.js is awesome\" />\n//         <PostLink id=\"deploy-nextjs\" title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n//\n// const Index = props => (\n//   <Layout>\n//     <h1>Posts</h1>\n//     <ul>\n//       {props.posts.map(post => (\n//         <li key={post.id}>\n//           <Link as={`/p/${post.id}`} href={`/post?id=${post.id}`}>\n//             <a>{post.title}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// const Index = props => {\n//   <Layout>\n//   <h1>Posts</h1>\n//   </Layout>\n// }\n// function Index(props) {\n//   return (\n//     <div>\n//     <Layout>\n//     <h1>Posts</h1>\n//     </Layout>\n//     </div>\n//     )\n// }\n\nvar Index = function Index(props) {\n  return React.createElement(\"div\", null, React.createElement(Layout, null, React.createElement(\"h1\", null, \"Posts\")));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/posts');\n\n        case 2:\n          res = _context.sent;\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})); // Index.getInitialProps = async function() {\n//   const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n//   const data = await res.json();\n//   console.log(data)\n//   // console.log(`Show data fetched. Count: ${data.length}`);\n//   // return {\n//   // };\n// };\n\nexport default Index;","map":{"version":3,"sources":["/Users/minhhienpham/code/Minhshi/minh-blog/pages/index.js"],"names":["Layout","Link","fetch","Index","props","getInitialProps","res"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,SACA,iCACA,oBAAC,MAAD,QACA,wCADA,CADA,CADA;AAOD,CARD;;AAUAD,KAAK,CAACE,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJH,KAAK,CAAC,4CAAD,CADD;;AAAA;AAChBI,UAAAA,GADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,G,CAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;AAEA,eAAeH,KAAf","sourcesContent":["import Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n// const Post = props => (\n//   <li>\n//     <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink id=\"hello-nextjs\" title=\"Hello Next.js\" />\n//         <PostLink id=\"learn-nextjs\" title=\"Learn Next.js is awesome\" />\n//         <PostLink id=\"deploy-nextjs\" title=\"Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n//\n\n// const Index = props => (\n//   <Layout>\n//     <h1>Posts</h1>\n//     <ul>\n//       {props.posts.map(post => (\n//         <li key={post.id}>\n//           <Link as={`/p/${post.id}`} href={`/post?id=${post.id}`}>\n//             <a>{post.title}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n\n// const Index = props => {\n//   <Layout>\n//   <h1>Posts</h1>\n//   </Layout>\n// }\n\n// function Index(props) {\n//   return (\n//     <div>\n//     <Layout>\n//     <h1>Posts</h1>\n//     </Layout>\n//     </div>\n//     )\n// }\n\nconst Index = props => {\n  return (\n  <div>\n  <Layout>\n  <h1>Posts</h1>\n  </Layout>\n  </div>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n}\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n//   const data = await res.json();\n//   console.log(data)\n\n//   // console.log(`Show data fetched. Count: ${data.length}`);\n\n//   // return {\n\n//   // };\n// };\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}